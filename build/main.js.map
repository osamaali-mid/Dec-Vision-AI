{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.2.1\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\nconst axios = require(\"axios\").default;\nconst https = require(\"https\");\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\n\n\nclass Reolink810a extends utils.Adapter {\n\n    \n    private reolinkApiClient : any = null;\n    public pollTimer : any;\n\n    \n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'reolink-810a',\n\t\t});\n\n\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\tthis.on('objectChange', this.onObjectChange.bind(this));\n\t\tthis.on('message', this.onMessage.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n    \n    \n    \n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void>\n    {\n\n        this.announceOffline();\n\n        if (!this.config.Hostname) {\n\t\t\tthis.log.error(\"Hostname not (yet) set - please check Settings!\");\n\t\t\treturn;\n\t\t}\n\n        if (!this.config.Username) {\n\t\t\tthis.log.error(\"Username not (yet) set - please check Settings!\");\n\t\t\treturn;\n\t\t}\n\n        if (!this.config.Password) {\n\t\t\tthis.log.error(\"Password not (yet) set - please check Settings!\");\n\t\t\treturn;\n\t\t}\n\n        if (!this.config.apiRefreshInterval) {\n\t\t\tthis.log.error(\"Refresh Interval for Motion Detection not (yet) set - please check Settings!\");\n\t\t\treturn;\n\t\t}\n\n        this.reolinkApiClient = axios.create({\n\t\t\tbaseURL: `https://${this.config.Hostname}`,\n\t\t\ttimeout: 4000,\n\t\t\tresponseType: \"json\",\n\t\t\tresponseEncoding: \"binary\",\n\t\t\thttpsAgent: new https.Agent({\n\t\t\t\trejectUnauthorized: false,\n\t\t\t}),\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device', {\n\t\t\ttype: 'channel',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device.Model', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device.BuildDay', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device.CfgVer', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device.Detail', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device.DiskNum', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'number',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device.FirmVer', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device.Name', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device.Serial', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Device.Wifi', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network', {\n\t\t\ttype: 'channel',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.ActiveLink', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.Connected', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.DNS-Auto', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.DNS-Server01', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false,\n                def: \"\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.DNS-Server02', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false,\n                def: \"\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.MAC', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false,\n                def: \"\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.Gateway', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false,\n                def: \"\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.IP', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false,\n                def: \"\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.Mask', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false,\n                def: \"\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Network.Type', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false,\n                def: \"\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors', {\n\t\t\ttype: 'channel',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.MotionDetected', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.DogCat', {\n\t\t\ttype: 'channel',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.DogCat.Detected', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.DogCat.Supported', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.Face', {\n\t\t\ttype: 'channel',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.Face.Detected', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.Face.Supported', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.People', {\n\t\t\ttype: 'channel',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.People.Detected', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.People.Supported', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.Vehicle', {\n\t\t\ttype: 'channel',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.Vehicle.Detected', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n        await this.setObjectNotExistsAsync('Sensors.Vehicle.Supported', {\n\t\t\ttype: 'state',\n\t\t\tcommon: {\n\t\t\t\tname: '',\n\t\t\t\ttype: 'boolean',\n\t\t\t\trole: 'value',\n\t\t\t\tread: true,\n                write: false\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\n        \n\n        this.getDevinfo();\n        this.getLocalLink();\n\n\n\n        if (this.config.PollMD || this.config.PollAI)\n        {\n            this.pollTimer = this.setInterval(this.pollSensors, this.config.apiRefreshInterval, this);\n\t\t}\n\t}\n\n\n\n    async pollSensors(classInstance:any)\n    {\n        if (classInstance.config.PollMD)\n            classInstance.getMdState();\n        if (classInstance.config.PollAI)\n            classInstance.getAiState();\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    async announceOffline()\n    {\n        await this.setStateAsync('info.connection',   {val: false, ack: true});\n        await this.setStateAsync(\"Network.Connected\", {val: false, ack: true});\n    }\n\n    async announceOnline()\n    {\n        await this.setStateAsync('info.connection',   {val: true, ack: true});\n        await this.setStateAsync(\"Network.Connected\", {val: true, ack: true});\n    }\n\n\n    async getDevinfo() {\n\n        if (this.reolinkApiClient)\n        {\n            try\n            {\n                const DevInfoValues = await this.reolinkApiClient.get(`/api.cgi?cmd=GetDevInfo&channel=0&user=${this.config.Username}&password=${this.config.Password}`);\n                // this.log.debug(`camMdStateInfo ${JSON.stringify(DevInfoValues.status)}: ${JSON.stringify(DevInfoValues.data)}`);\n\n                if(DevInfoValues.status === 200)\n                {\n                    this.announceOnline();\n                    const DevValues = DevInfoValues.data[0];\n                    await this.setStateAsync(\"Device.BuildDay\", {val: DevValues.value.DevInfo.buildDay, ack: true});\n                    await this.setStateAsync(\"Device.CfgVer\",   {val: DevValues.value.DevInfo.cfgVer,   ack: true});\n                    await this.setStateAsync(\"Device.Detail\",   {val: DevValues.value.DevInfo.detail,   ack: true});\n                    await this.setStateAsync(\"Device.DiskNum\",  {val: DevValues.value.DevInfo.diskNum,  ack: true});\n                    await this.setStateAsync(\"Device.FirmVer\",  {val: DevValues.value.DevInfo.firmVer,  ack: true});\n                    await this.setStateAsync(\"Device.Model\",    {val: DevValues.value.DevInfo.model,    ack: true});\n                    await this.setStateAsync(\"Device.Name\",     {val: DevValues.value.DevInfo.name,     ack: true});\n                    await this.setStateAsync(\"Device.Serial\",   {val: DevValues.value.DevInfo.serial,   ack: true});\n                    await this.setStateAsync(\"Device.Wifi\",     {val: DevValues.value.DevInfo.wifi,     ack: true});\n                }\n\n            } catch (error:any)\n            {\n                this.announceOffline();\n                this.log.error(error);\n            }\n        }\n    }\n\n\n    async getLocalLink()\n    {\n\n\t\tif (this.reolinkApiClient)\n        {\n\t\t\ttry\n            {\n\t\t\t\tconst LinkInfoValues = await this.reolinkApiClient.get(`/api.cgi?cmd=GetLocalLink&channel=0&user=${this.config.Username}&password=${this.config.Password}`);\n\t\t\t\t// this.log.debug(`LinkInfoValues ${JSON.stringify(LinkInfoValues.status)}: ${JSON.stringify(LinkInfoValues.data)}`);\n\n\t\t\t\tif(LinkInfoValues.status === 200)\n                {\n\t\t\t\t\tthis.announceOnline();\n\t\t\t\t\tconst LinkValues = LinkInfoValues.data[0];\n\t\t\t\t\tawait this.setStateAsync(\"Network.ActiveLink\",   {val: LinkValues.value.LocalLink.activeLink,     ack: true});\n                    await this.setStateAsync(\"Network.DNS-Auto\",     {val: LinkValues.value.LocalLink.dns.auto,       ack: true});\n                    await this.setStateAsync(\"Network.DNS-Server01\", {val: LinkValues.value.LocalLink.dns.dns1,       ack: true});\n                    await this.setStateAsync(\"Network.DNS-Server02\", {val: LinkValues.value.LocalLink.dns.dns2,       ack: true});\n\t\t\t\t\tawait this.setStateAsync(\"Network.MAC\",          {val: LinkValues.value.LocalLink.mac,            ack: true});\n\t\t\t\t\tawait this.setStateAsync(\"Network.Gateway\",      {val: LinkValues.value.LocalLink.static.gateway, ack: true});\n                    await this.setStateAsync(\"Network.IP\",           {val: LinkValues.value.LocalLink.static.ip,      ack: true});\n                    await this.setStateAsync(\"Network.Mask\",         {val: LinkValues.value.LocalLink.static.mask,    ack: true});\n\t\t\t\t\tawait this.setStateAsync(\"Network.Type\",         {val: LinkValues.value.LocalLink.type,           ack: true});\n\t\t\t\t}\n\t\t\t} catch (error:any)\n            {\n                this.announceOffline();\n                this.log.error(error);\n            }\n\t\t}\n\t}\n\n\n\n\n\n\n\n    async getMdState()\n    {\n\t\tif (this.reolinkApiClient && this.config.PollMD)\n        {\n\t\t\ttry\n            {\n\t\t\t\tconst MdInfoValues = await this.reolinkApiClient.get(`/api.cgi?cmd=GetMdState&channel=0&user=${this.config.Username}&password=${this.config.Password}`);\n\t\t\t\t// this.log.debug(`camMdStateInfo ${JSON.stringify(MdInfoValues.status)}: ${JSON.stringify(MdInfoValues.data)}`);\n\n\t\t\t\tif(MdInfoValues.status === 200)\n                {\n\t\t\t\t\tthis.announceOnline();\n\t\t\t\t\tconst MdValues = MdInfoValues.data[0];\n\t\t\t\t\tawait this.setStateAsync(\"Sensors.MotionDetected\", {val: MdValues.value.state === 1, ack: true});\n\t\t\t\t}\n\t\t\t} catch (error:any)\n            {\n                this.announceOffline();\n                this.log.error(error);\n            }\n\t\t}\n\t}\n\n\n\n\n\n    async getAiState()\n    {\n\t\tif (this.reolinkApiClient && this.config.PollAI)\n        {\n\t\t\ttry\n            {\n\t\t\t\tconst AiInfoValues = await this.reolinkApiClient.get(`/api.cgi?cmd=GetAiState&channel=0&user=${this.config.Username}&password=${this.config.Password}`);\n\t\t\t\t// this.log.debug(`camAiStateInfo ${JSON.stringify(AiInfoValues.status)}: ${JSON.stringify(AiInfoValues.data)}`);\n\n\t\t\t\tif(AiInfoValues.status === 200)\n                {\n\t\t\t\t\tthis.announceOnline();\n\t\t\t\t\tconst AiValues = AiInfoValues.data[0];\n\t\t\t\t\tawait this.setStateAsync(\"Sensors.DogCat.Detected\",   {val: AiValues.value.dog_cat.alarm_state === 1, ack: true});\n                    await this.setStateAsync(\"Sensors.DogCat.Supported\",  {val: AiValues.value.dog_cat.support     === 1, ack: true});\n                    await this.setStateAsync(\"Sensors.Face.Detected\",     {val: AiValues.value.face.alarm_state    === 1, ack: true});\n                    await this.setStateAsync(\"Sensors.Face.Supported\",    {val: AiValues.value.face.support        === 1, ack: true});\n                    await this.setStateAsync(\"Sensors.People.Detected\",   {val: AiValues.value.people.alarm_state  === 1, ack: true});\n                    await this.setStateAsync(\"Sensors.People.Supported\",  {val: AiValues.value.people.support      === 1, ack: true});\n                    await this.setStateAsync(\"Sensors.Vehicle.Detected\",  {val: AiValues.value.vehicle.alarm_state === 1, ack: true});\n                    await this.setStateAsync(\"Sensors.Vehicle.Supported\", {val: AiValues.value.vehicle.support     === 1, ack: true});\n\t\t\t\t}\n\t\t\t} catch (error:any)\n            {\n                this.announceOffline();\n                this.log.error(error);\n            }\n\t\t}\n\t}\n\n\n\n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void\n    {\n\t\ttry\n        {\n            this.announceOffline();\n            clearInterval(this.pollTimer);\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  */\n\tprivate onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n\t\tif (obj) {\n\t\t\t// The object was changed\n\t\t\tthis.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t\t} else {\n\t\t\t// The object was deleted\n\t\t\tthis.log.info(`object ${id} deleted`);\n\t\t}\n\t}\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tif (state) {\n\t\t\t// The state was changed\n\t\t\tthis.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t} else {\n\t\t\t// The state was deleted\n\t\t\tthis.log.info(`state ${id} deleted`);\n\t\t}\n\t}\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\tprivate onMessage(obj: ioBroker.Message): void {\n\t\tif (typeof obj === 'object' && obj.message) {\n\t\t\tif (obj.command === 'send') {\n\t\t\t\t// e.g. send email or pushover or whatever\n\t\t\t\tthis.log.info('send command');\n\n\t\t\t\t// Send response in callback if required\n\t\t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, 'Message received', obj.callback);\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Reolink810a(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Reolink810a())();\n}\n\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAMA,YAAuB;AACvB,MAAM,QAAQ,QAAQ,OAAO,EAAE;AAC/B,MAAM,QAAQ,QAAQ,OAAO;AAO7B,MAAM,oBAAoB,MAAM,QAAQ;AAAA,EAQhC,YAAY,UAAyC,CAAC,GAAG;AAC/D,UAAM;AAAA,MACL,GAAG;AAAA,MACH,MAAM;AAAA,IACP,CAAC;AATC,SAAQ,mBAAyB;AAYnC,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACxC,SAAK,GAAG,eAAe,KAAK,cAAc,KAAK,IAAI,CAAC;AACpD,SAAK,GAAG,gBAAgB,KAAK,eAAe,KAAK,IAAI,CAAC;AACtD,SAAK,GAAG,WAAW,KAAK,UAAU,KAAK,IAAI,CAAC;AAC5C,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EAC3C;AAAA,EAQA,MAAc,UACX;AAEI,SAAK,gBAAgB;AAErB,QAAI,CAAC,KAAK,OAAO,UAAU;AAChC,WAAK,IAAI,MAAM,iDAAiD;AAChE;AAAA,IACD;AAEM,QAAI,CAAC,KAAK,OAAO,UAAU;AAChC,WAAK,IAAI,MAAM,iDAAiD;AAChE;AAAA,IACD;AAEM,QAAI,CAAC,KAAK,OAAO,UAAU;AAChC,WAAK,IAAI,MAAM,iDAAiD;AAChE;AAAA,IACD;AAEM,QAAI,CAAC,KAAK,OAAO,oBAAoB;AAC1C,WAAK,IAAI,MAAM,8EAA8E;AAC7F;AAAA,IACD;AAEM,SAAK,mBAAmB,MAAM,OAAO;AAAA,MAC1C,SAAS,WAAW,KAAK,OAAO;AAAA,MAChC,SAAS;AAAA,MACT,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,YAAY,IAAI,MAAM,MAAM;AAAA,QAC3B,oBAAoB;AAAA,MACrB,CAAC;AAAA,IACF,CAAC;AAEK,UAAM,KAAK,wBAAwB,UAAU;AAAA,MAClD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,gBAAgB;AAAA,MACxD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,mBAAmB;AAAA,MAC3D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,iBAAiB;AAAA,MACzD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,iBAAiB;AAAA,MACzD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,kBAAkB;AAAA,MAC1D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,kBAAkB;AAAA,MAC1D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,eAAe;AAAA,MACvD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,iBAAiB;AAAA,MACzD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,eAAe;AAAA,MACvD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,WAAW;AAAA,MACnD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,sBAAsB;AAAA,MAC9D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,qBAAqB;AAAA,MAC7D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,oBAAoB;AAAA,MAC5D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,wBAAwB;AAAA,MAChE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,QACP,KAAK;AAAA,MAClB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,wBAAwB;AAAA,MAChE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,QACP,KAAK;AAAA,MAClB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,eAAe;AAAA,MACvD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,QACP,KAAK;AAAA,MAClB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,mBAAmB;AAAA,MAC3D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,QACP,KAAK;AAAA,MAClB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,cAAc;AAAA,MACtD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,QACP,KAAK;AAAA,MAClB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,gBAAgB;AAAA,MACxD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,QACP,KAAK;AAAA,MAClB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,gBAAgB;AAAA,MACxD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,QACP,KAAK;AAAA,MAClB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,WAAW;AAAA,MACnD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,0BAA0B;AAAA,MAClE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,kBAAkB;AAAA,MAC1D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,2BAA2B;AAAA,MACnE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,4BAA4B;AAAA,MACpE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,gBAAgB;AAAA,MACxD,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,yBAAyB;AAAA,MACjE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,0BAA0B;AAAA,MAClE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,kBAAkB;AAAA,MAC1D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,2BAA2B;AAAA,MACnE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,4BAA4B;AAAA,MACpE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,mBAAmB;AAAA,MAC3D,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,MACP;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,4BAA4B;AAAA,MACpE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAEK,UAAM,KAAK,wBAAwB,6BAA6B;AAAA,MACrE,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACM,OAAO;AAAA,MACpB;AAAA,MACA,QAAQ,CAAC;AAAA,IACV,CAAC;AAKK,SAAK,WAAW;AAChB,SAAK,aAAa;AAIlB,QAAI,KAAK,OAAO,UAAU,KAAK,OAAO,QACtC;AACI,WAAK,YAAY,KAAK,YAAY,KAAK,aAAa,KAAK,OAAO,oBAAoB,IAAI;AAAA,IAClG;AAAA,EACD;AAAA,EAIG,MAAM,YAAY,eAClB;AACI,QAAI,cAAc,OAAO;AACrB,oBAAc,WAAW;AAC7B,QAAI,cAAc,OAAO;AACrB,oBAAc,WAAW;AAAA,EACjC;AAAA,EAsBA,MAAM,kBACN;AACI,UAAM,KAAK,cAAc,mBAAqB,EAAC,KAAK,OAAO,KAAK,KAAI,CAAC;AACrE,UAAM,KAAK,cAAc,qBAAqB,EAAC,KAAK,OAAO,KAAK,KAAI,CAAC;AAAA,EACzE;AAAA,EAEA,MAAM,iBACN;AACI,UAAM,KAAK,cAAc,mBAAqB,EAAC,KAAK,MAAM,KAAK,KAAI,CAAC;AACpE,UAAM,KAAK,cAAc,qBAAqB,EAAC,KAAK,MAAM,KAAK,KAAI,CAAC;AAAA,EACxE;AAAA,EAGA,MAAM,aAAa;AAEf,QAAI,KAAK,kBACT;AACI,UACA;AACI,cAAM,gBAAgB,MAAM,KAAK,iBAAiB,IAAI,0CAA0C,KAAK,OAAO,qBAAqB,KAAK,OAAO,UAAU;AAGvJ,YAAG,cAAc,WAAW,KAC5B;AACI,eAAK,eAAe;AACpB,gBAAM,YAAY,cAAc,KAAK;AACrC,gBAAM,KAAK,cAAc,mBAAmB,EAAC,KAAK,UAAU,MAAM,QAAQ,UAAU,KAAK,KAAI,CAAC;AAC9F,gBAAM,KAAK,cAAc,iBAAmB,EAAC,KAAK,UAAU,MAAM,QAAQ,QAAU,KAAK,KAAI,CAAC;AAC9F,gBAAM,KAAK,cAAc,iBAAmB,EAAC,KAAK,UAAU,MAAM,QAAQ,QAAU,KAAK,KAAI,CAAC;AAC9F,gBAAM,KAAK,cAAc,kBAAmB,EAAC,KAAK,UAAU,MAAM,QAAQ,SAAU,KAAK,KAAI,CAAC;AAC9F,gBAAM,KAAK,cAAc,kBAAmB,EAAC,KAAK,UAAU,MAAM,QAAQ,SAAU,KAAK,KAAI,CAAC;AAC9F,gBAAM,KAAK,cAAc,gBAAmB,EAAC,KAAK,UAAU,MAAM,QAAQ,OAAU,KAAK,KAAI,CAAC;AAC9F,gBAAM,KAAK,cAAc,eAAmB,EAAC,KAAK,UAAU,MAAM,QAAQ,MAAU,KAAK,KAAI,CAAC;AAC9F,gBAAM,KAAK,cAAc,iBAAmB,EAAC,KAAK,UAAU,MAAM,QAAQ,QAAU,KAAK,KAAI,CAAC;AAC9F,gBAAM,KAAK,cAAc,eAAmB,EAAC,KAAK,UAAU,MAAM,QAAQ,MAAU,KAAK,KAAI,CAAC;AAAA,QAClG;AAAA,MAEJ,SAAS,OAAP;AAEE,aAAK,gBAAgB;AACrB,aAAK,IAAI,MAAM,KAAK;AAAA,MACxB;AAAA,IACJ;AAAA,EACJ;AAAA,EAGA,MAAM,eACN;AAEF,QAAI,KAAK,kBACH;AACL,UACS;AACR,cAAM,iBAAiB,MAAM,KAAK,iBAAiB,IAAI,4CAA4C,KAAK,OAAO,qBAAqB,KAAK,OAAO,UAAU;AAG1J,YAAG,eAAe,WAAW,KACjB;AACX,eAAK,eAAe;AACpB,gBAAM,aAAa,eAAe,KAAK;AACvC,gBAAM,KAAK,cAAc,sBAAwB,EAAC,KAAK,WAAW,MAAM,UAAU,YAAgB,KAAK,KAAI,CAAC;AAC7F,gBAAM,KAAK,cAAc,oBAAwB,EAAC,KAAK,WAAW,MAAM,UAAU,IAAI,MAAY,KAAK,KAAI,CAAC;AAC5G,gBAAM,KAAK,cAAc,wBAAwB,EAAC,KAAK,WAAW,MAAM,UAAU,IAAI,MAAY,KAAK,KAAI,CAAC;AAC5G,gBAAM,KAAK,cAAc,wBAAwB,EAAC,KAAK,WAAW,MAAM,UAAU,IAAI,MAAY,KAAK,KAAI,CAAC;AAC3H,gBAAM,KAAK,cAAc,eAAwB,EAAC,KAAK,WAAW,MAAM,UAAU,KAAgB,KAAK,KAAI,CAAC;AAC5G,gBAAM,KAAK,cAAc,mBAAwB,EAAC,KAAK,WAAW,MAAM,UAAU,OAAO,SAAS,KAAK,KAAI,CAAC;AAC7F,gBAAM,KAAK,cAAc,cAAwB,EAAC,KAAK,WAAW,MAAM,UAAU,OAAO,IAAS,KAAK,KAAI,CAAC;AAC5G,gBAAM,KAAK,cAAc,gBAAwB,EAAC,KAAK,WAAW,MAAM,UAAU,OAAO,MAAS,KAAK,KAAI,CAAC;AAC3H,gBAAM,KAAK,cAAc,gBAAwB,EAAC,KAAK,WAAW,MAAM,UAAU,MAAgB,KAAK,KAAI,CAAC;AAAA,QAC7G;AAAA,MACD,SAAS,OAAP;AAEW,aAAK,gBAAgB;AACrB,aAAK,IAAI,MAAM,KAAK;AAAA,MACxB;AAAA,IACV;AAAA,EACD;AAAA,EAQG,MAAM,aACN;AACF,QAAI,KAAK,oBAAoB,KAAK,OAAO,QACnC;AACL,UACS;AACR,cAAM,eAAe,MAAM,KAAK,iBAAiB,IAAI,0CAA0C,KAAK,OAAO,qBAAqB,KAAK,OAAO,UAAU;AAGtJ,YAAG,aAAa,WAAW,KACf;AACX,eAAK,eAAe;AACpB,gBAAM,WAAW,aAAa,KAAK;AACnC,gBAAM,KAAK,cAAc,0BAA0B,EAAC,KAAK,SAAS,MAAM,UAAU,GAAG,KAAK,KAAI,CAAC;AAAA,QAChG;AAAA,MACD,SAAS,OAAP;AAEW,aAAK,gBAAgB;AACrB,aAAK,IAAI,MAAM,KAAK;AAAA,MACxB;AAAA,IACV;AAAA,EACD;AAAA,EAMG,MAAM,aACN;AACF,QAAI,KAAK,oBAAoB,KAAK,OAAO,QACnC;AACL,UACS;AACR,cAAM,eAAe,MAAM,KAAK,iBAAiB,IAAI,0CAA0C,KAAK,OAAO,qBAAqB,KAAK,OAAO,UAAU;AAGtJ,YAAG,aAAa,WAAW,KACf;AACX,eAAK,eAAe;AACpB,gBAAM,WAAW,aAAa,KAAK;AACnC,gBAAM,KAAK,cAAc,2BAA6B,EAAC,KAAK,SAAS,MAAM,QAAQ,gBAAgB,GAAG,KAAK,KAAI,CAAC;AACjG,gBAAM,KAAK,cAAc,4BAA6B,EAAC,KAAK,SAAS,MAAM,QAAQ,YAAgB,GAAG,KAAK,KAAI,CAAC;AAChH,gBAAM,KAAK,cAAc,yBAA6B,EAAC,KAAK,SAAS,MAAM,KAAK,gBAAmB,GAAG,KAAK,KAAI,CAAC;AAChH,gBAAM,KAAK,cAAc,0BAA6B,EAAC,KAAK,SAAS,MAAM,KAAK,YAAmB,GAAG,KAAK,KAAI,CAAC;AAChH,gBAAM,KAAK,cAAc,2BAA6B,EAAC,KAAK,SAAS,MAAM,OAAO,gBAAiB,GAAG,KAAK,KAAI,CAAC;AAChH,gBAAM,KAAK,cAAc,4BAA6B,EAAC,KAAK,SAAS,MAAM,OAAO,YAAiB,GAAG,KAAK,KAAI,CAAC;AAChH,gBAAM,KAAK,cAAc,4BAA6B,EAAC,KAAK,SAAS,MAAM,QAAQ,gBAAgB,GAAG,KAAK,KAAI,CAAC;AAChH,gBAAM,KAAK,cAAc,6BAA6B,EAAC,KAAK,SAAS,MAAM,QAAQ,YAAgB,GAAG,KAAK,KAAI,CAAC;AAAA,QAChI;AAAA,MACD,SAAS,OAAP;AAEW,aAAK,gBAAgB;AACrB,aAAK,IAAI,MAAM,KAAK;AAAA,MACxB;AAAA,IACV;AAAA,EACD;AAAA,EAwBQ,SAAS,UACd;AACF,QACM;AACI,WAAK,gBAAgB;AACrB,oBAAc,KAAK,SAAS;AACrC,eAAS;AAAA,IACV,SAAS,GAAP;AACD,eAAS;AAAA,IACV;AAAA,EACD;AAAA,EAOQ,eAAe,IAAY,KAA+C;AACjF,QAAI,KAAK;AAER,WAAK,IAAI,KAAK,UAAU,eAAe,KAAK,UAAU,GAAG,GAAG;AAAA,IAC7D,OAAO;AAEN,WAAK,IAAI,KAAK,UAAU,YAAY;AAAA,IACrC;AAAA,EACD;AAAA,EAKQ,cAAc,IAAY,OAAgD;AACjF,QAAI,OAAO;AAEV,WAAK,IAAI,KAAK,SAAS,eAAe,MAAM,cAAc,MAAM,MAAM;AAAA,IACvE,OAAO;AAEN,WAAK,IAAI,KAAK,SAAS,YAAY;AAAA,IACpC;AAAA,EACD;AAAA,EAOQ,UAAU,KAA6B;AAC9C,QAAI,OAAO,QAAQ,YAAY,IAAI,SAAS;AAC3C,UAAI,IAAI,YAAY,QAAQ;AAE3B,aAAK,IAAI,KAAK,cAAc;AAG5B,YAAI,IAAI;AAAU,eAAK,OAAO,IAAI,MAAM,IAAI,SAAS,oBAAoB,IAAI,QAAQ;AAAA,MACtF;AAAA,IACD;AAAA,EACD;AAED;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAE5B,SAAO,UAAU,CAAC,YAAuD,IAAI,YAAY,OAAO;AACjG,OAAO;AAEN,GAAC,MAAM,IAAI,YAAY,GAAG;AAC3B;",
  "names": []
}
